-include common.txt

# i was having a lot of trouble getting the applet to work without this. - JC
# i'm fine with this. - ST 8/4/11
-dontobfuscate

# since this file is in the project/build/proguard directory, we need to get back up to the root
-basedirectory ../..

# pulling in ordinary Scala objects costs very little in size, but
# when we starting pulling in stuff from the Scala standard library,
# the costs escalate somewhat, so be careful - ST 2/21/09, 8/12/09
# this is an injar, not a library jar, because we're going to stuff the Scala classes
# we need directly into HubNet.jar, so HubNet.jar has no external dependencies
-injars <org.nlogo.scala-library>

-injars target/scala-2.9.2/classes(!images/shapes-editor/**,!system/libraryShapes.txt,!system/about.txt,!system/library.html,!system/empty.nlogo3d,!system/behaviorspace.dtd,!system/dict3d.txt,!system/dict.txt,!system/info.css,!i18n/**,!images/title.jpg,**)

-outjar HubNet.jar

-keep public class scala.ScalaObject {
  *;
}

-keep public class org.nlogo.hubnet.client.*

# the Event stuff works by reflection so we need to explicitly include these
-keep public class * extends org.nlogo.window.Event

# this is a bit of magic needed to make Java enums work, taken from the ProGuard manual
-keepclassmembers enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}

# HubNet uses java.io.Serializable, so we need this, taken from the ProGuard manual
# http://proguard.sourceforge.net/index.html#/manual/examples.html#serializable
# this is what I needed to avoid weird serialversionuid issues. -JC 7/15/2011
-keepclassmembers class org.nlogo.** implements java.io.Serializable {
    static final long serialVersionUID;
    private static final java.io.ObjectStreamField[] serialPersistentFields;
    !static !transient <fields>;
    !private <fields>;
    !private <methods>;
    private void writeObject(java.io.ObjectOutputStream);
    private void readObject(java.io.ObjectInputStream);
    java.lang.Object writeReplace();
    java.lang.Object readResolve();
}

# for the Scala collections, we need to keep enough stuff that we can serialize
# and deserialize, but not so much stuff that serialVersionUIDs don't change
# (since in Streamable we ignore id mismatches) - ST 8/17/11
-keepclassmembers class scala.collection.** implements java.io.Serializable {
    static final long serialVersionUID;
    private static final java.io.ObjectStreamField[] serialPersistentFields;
    !static !transient <fields>;
    private void writeObject(java.io.ObjectOutputStream);
    private void readObject(java.io.ObjectInputStream);
    java.lang.Object writeReplace();
    java.lang.Object readResolve();
}

-keep public class org.nlogo.hubnet.mirroring.* {
 *;
}

-keep public class org.nlogo.widget.* {
 *;
}

# needed or extensions written in Scala won't build
-keep class scala.reflect.ScalaSignature {
    *;
}
